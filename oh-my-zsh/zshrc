# Set name of the theme to load.
ZSH_THEME="honukai"

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="false"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
plugins=(git sublime)

# 'thefuck' configuration
eval $(thefuck --alias)

# Make sure colours work in vim and neovim
export NVIM_TUI_ENABLE_TRUE_COLOR=1
export TERM=xterm-256color

alias vim="nvim"

# OS dependent configurations
if [[ $OSTYPE =~ "darwin" ]]; then

  # Android SDK Location
  export ANDROID_HOME=$HOME/Library/Android/sdk
  export PATH=${PATH}:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools

  # JAVA HOME
  export JAVA_HOME="$(/usr/libexec/java_home -v 1.8)"

  # Fixes some bug in Tmux on MaxOS Sierra
  export EVENT_NOKQUEUE=1

  # Change the default location for Caskroom apps to symlink to
  export HOMEBREW_CASK_OPTS="--appdir=/Applications"

  # Enable rbenv
  export PATH="$HOME/.rbenv/bin:$PATH"
  eval "$(rbenv init -)"

  # Fixes shell integration on iterm2
  test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

  # Mute and Un-Mute
  alias mute="osascript -e 'set volume output muted true'"
  alias unmute="osascript -e 'set volume 10'"

  # Lock current session and proceed to the login screen.
  alias lock='/System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend'

  # Flush Directory Service cache
  alias flush="dscacheutil -flushcache"

  # File size
  alias fs="stat -f \"%z bytes\""

  # Empty the Trash on all mounted volumes and the main HDD
  alias emptyTrash="sudo rm -rfv /Volumes/*/.Trashes; rm -rfv ~/.Trash"

  # Hide/show all desktop icons (useful when presenting)
  alias hideDesktop="defaults write com.apple.finder CreateDesktop -bool false && killall Finder"
  alias showDesktop="defaults write com.apple.finder CreateDesktop -bool true && killall Finder"

  # Shows and Hides hidden files
  alias showHiddenFiles='defaults write com.apple.finder AppleShowAllFiles YES; killall Finder /System/Library/CoreServices/Finder.app'
  alias hideHiddenFiles='defaults write com.apple.finder AppleShowAllFiles NO; killall Finder /System/Library/CoreServices/Finder.app'

  # Get gpg-agent to work on osx
  export SSH_AUTH_SOCK=$HOME/.gnupg/S.gpg-agent.ssh
  #[ -f ~/.gpg-agent-info ] && source ~/.gpg-agent-info
  #if [ -S "${GPG_AGENT_INFO%%:*}" ]; then
      #export GPG_AGENT_INFO
      #export SSH_AUTH_SOCK
      #export SSH_AGENT_PID
  #else
      #eval $( gpg-agent --daemon --write-env-file ~/.gpg-agent-info )
  #fi
  GPG_TTY=$(tty)
  export GPG_TTY
  if [ -f "${HOME}/.gpg-agent-info" ]; then
    . "${HOME}/.gpg-agent-info"
    export GPG_AGENT_INFO
    export SSH_AUTH_SOCK
  fi

elif [[ $OSTYPE == "linux-gnu" ]]; then

  # Linuxbrew
  export PATH="/home/anthony/.linuxbrew/bin:$PATH" 
  export MANPATH="/home/anthony/.linuxbrew/share/man:$MANPATH"
  export INFOPATH="/home/anthony/.linuxbrew/share/info:$INFOPATH"

  #if [ -f "${HOME}/.gpg-agent-info" ]; then
       #source "${HOME}/.gpg-agent-info"
         #export GPG_AGENT_INFO
         #export SSH_AUTH_SOCK
         #export SSH_AGENT_PID
  #else
      #eval $( gpg-agent --daemon --write-env-file ~/.gpg-agent-info )
  #fi

fi

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh
source $ZSH/oh-my-zsh.sh
