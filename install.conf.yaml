- defaults:
    link:
      relink: true

- clean: ['~']

# Install cross-platform configs
- crossplatform-link:
    ~/.gitconfig: config/git/gitconfig
    ~/.gitignore_global: config/git/gitignore_global

- crossplatform-shell:
    # Create directories before symlinking files
    - command: if not exist "%USERPROFILE%\Documents\PowerShell" mkdir "%USERPROFILE%\Documents\PowerShell"
      platform: win32
    - command: if not exist "%USERPROFILE%\AppData\Local\Packages\Microsoft.WindowsTerminal_8wekyb3d8bbwe\LocalState" mkdir "%USERPROFILE%\AppData\Local\Packages\Microsoft.WindowsTerminal_8wekyb3d8bbwe\LocalState"
      platform: win32
    - command: if not exist "%USERPROFILE%\AppData\Local\nvim" mkdir "%USERPROFILE%\AppData\Local\nvim"
      platform: win32
    - command: mkdir -p ~/.config/zsh
      platform: linux
    - command: mkdir -p ~/.config/starship
      platform: linux
    - command: mkdir -p ~/.config/mise
      platform: linux
    - command: mkdir -p ~/.config/nvim
      platform: linux
    # Install applications using windows package manager
    # winget returns $False when it goes to install an application that is already installed
    # This is an undesirable behaviour for idempotent scripts, as a workaround I'm checking if the return code is -1978335135 to know if the application is already installed
    # winget return codes: https://github.com/microsoft/winget-cli/blob/master/doc/windows/package-manager/winget/returnCodes.md#general-errors
    - command: powershell -Command "winget install Microsoft.WindowsTerminal --source winget --no-upgrade; if ($? -eq $True -or $LASTEXITCODE -eq -1978335135) { $True } else { $False }"
      platform: win32
    - command: powershell -Command "winget install Microsoft.Powershell --source winget --no-upgrade; if ($? -eq $True -or $LASTEXITCODE -eq -1978335135) { $True } else { $False }"
      platform: win32
    - command: powershell -Command "winget install Microsoft.PowerToys --source winget --no-upgrade; if ($? -eq $True -or $LASTEXITCODE -eq -1978335135) { $True } else { $False }"
      platform: win32
    # Decrypt git secrets
    - command: sops --decrypt config\git\gitlocal.win.sops.ini > %USERPROFILE%\.gitlocal
      platform: win32
    - command: sops --decrypt config/git/gitlocal.wsl.sops.ini > ~/.gitlocal
      environment: WSL_DISTRO_NAME
- crossplatform-link:
    # powershell 7
    ~/Documents/PowerShell/Profile.ps1:
      path: config/powershell/Profile.ps1
      platform: win32
    # windows terminal
    ~/AppData/Local/Packages/Microsoft.WindowsTerminal_8wekyb3d8bbwe/LocalState/settings.json:
      path: config/windows-terminal/settings.json
      force: true
      platform: win32
    # zsh / prezto
    ~/.zshenv:
      path: config/zsh/zshenv
      platform: linux
    ~/.config/zsh/:
      path: config/zsh/.*
      glob: true
      exclude: [ config/zsh/zshenv ]
      platform: linux
    # starship-rs
    ~/.config/starship/starship.toml:
      path: config/starship/starship.toml
      platform: linux
    # mise
    ~/.config/mise/config.toml:
      path: config/mise/config.toml
      platform: linux
    # neovim
    ~/AppData/Local/nvim/:
      path: config/nvim/**
      glob: true
      platform: win32
    ~/.config/nvim/:
      path: config/nvim/**
      glob: true
      platform: linux
    # editorconfig
    ~/.editorconfig:
      path: config/editorconfig
      platform: linux
    # tmux
    ~/.config/tmux:
      path: config/tmux/
      platform: linux
      force: true
- scoop:
    buckets:
      - main
      - extras
      - nerd-fonts
    apps:
      - GeistMono-NF-Mono
      # App dependencies
      - fzf
      - gcc
      - 7zip
      - make
      - nodejs
      - python
      - ripgrep
      # Apps
      - 1password-cli
      - eza
      - kopiaui
      - lazygit
      - neovim
      - obsidian
      - sops
      - zeal
- crossplatform-shell:
    # install prezto
    - command: if [ ! -d "${ZDOTDIR:-${XDG_CONFIG_HOME:-$HOME/.config}/zsh}/.zprezto" ]; then git clone --recursive https://github.com/sorin-ionescu/prezto.git "${ZDOTDIR:-${XDG_CONFIG_HOME:-$HOME/.config}/zsh}/.zprezto"; fi
      platform: linux
    # change default shell to zsh
    - command: CURRENT_SHELL=$(getent passwd $USER | cut "-d:" -f7) && if [ "${CURRENT_SHELL}" != "/bin/zsh" ]; then echo "Changing default shell to zsh" && chsh -s /bin/zsh; fi
      stdin: true
      stdout: true
      stderr: true
      platform: linux

- shell:
    - [git submodule update --init --recursive, Installing submodules]
